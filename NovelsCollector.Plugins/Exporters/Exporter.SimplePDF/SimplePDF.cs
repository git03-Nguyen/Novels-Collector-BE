using NovelsCollector.SDK.Models;
using NovelsCollector.SDK.Plugins.ExporterPlugins;
using System.Reflection;

namespace Exporter.SimplePDF
{
    public class SimplePDF : ExporterPlugin, IExporterPlugin
    {
        public SimplePDF()
        {
            Name = "SimplePDF";
            FileFormat = "pdf";
            Description = "This plugin is used to export the novel to PDF format with simple template.";
            Version = "1.0.0";
            Author = "Nguyen Dinh Anh";
            Enabled = true;
        }

        public async Task Export(Novel novel, Stream stream)
        {
            if (novel == null || novel.Chapters == null || novel.Chapters.Length == 0)
            {
                throw new ArgumentNullException(nameof(novel));
            }

            // Value declarations
            var title = (novel.Title != null) ? novel.Title : "Không tựa đề";
            var author = (novel.Authors != null && novel.Authors.Length > 0) ? novel.Authors[0].Name : "Khuyết danh";
            var categories = (novel.Categories != null && novel.Categories.Length > 0) ?
                string.Join(" | ", novel.Categories.Take(3).Select(c => c.Title)) :
                "Không thể loại";
            var startChapter = (novel.Chapters != null && novel.Chapters.Length > 0) ? novel.Chapters[0].Number : 1;
            var lastChapter = (novel.Chapters != null && novel.Chapters.Length > 0) ? novel.Chapters[^1].Number : 1;
            var chaptersRange = (startChapter == lastChapter) ? $"Chương {startChapter}" : $"Chương {startChapter} - Chương {lastChapter}";
            var source = (novel.Source != null) ? novel.Source : "Không rõ";

            // Config new converter
            SelectPdf.HtmlToPdf converter = new SelectPdf.HtmlToPdf();
            converter.Options.PdfPageSize = SelectPdf.PdfPageSize.A4;
            converter.Options.PdfPageOrientation = SelectPdf.PdfPageOrientation.Portrait;
            converter.Options.MarginTop = 100;
            converter.Options.MarginRight = 70;
            converter.Options.MarginBottom = 100;
            converter.Options.MarginLeft = 70;
            converter.Options.PdfCompressionLevel = SelectPdf.PdfCompressionLevel.Best;

            // CSS path
            string rootPath = Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location);
            string pathToCss = Path.Combine(rootPath, "custom.css");

            // Cover page
            string htmlCover = @$"
                <!DOCTYPE html>
                <html>
                <head>
                    <link rel=""stylesheet"" type=""text/css"" href=""{pathToCss}"" media=""all"" />
                </head>
                <body>
                <div class=""cover-page"">
                    <img src=""{novel.Cover}"" alt=""{title}"" class=""cover-image""/>
                    <div class=""title"">{title}</div>
                    <div class=""author"">{author}</div>
                    <div class=""categories""{categories}</div>
                    <hr>
                    <div class=""chapters"">{chaptersRange}</div>
                    <div class=""source"">Nguồn: {source}</a></div>
                    <div class=""copyright"">Generated by <a href=""https://github.com/git03-Nguyen/Novels-Collector-BE"">Group 12</a></div>
                </div>
                </body>
                </html>
                ";
            SelectPdf.PdfDocument doc = converter.ConvertHtmlString(htmlCover);

            // Add chapters
            foreach (var chapter in novel.Chapters)
            {
                string htmlChapter = @$"
                    <!DOCTYPE html>
                    <html>
                    <head>
                        <link rel=""stylesheet"" type=""text/css"" href=""{pathToCss}"" media=""all"" />
                    </head>
                    <body>
                    <div>
                        <h1 class=""chapter-title"">Chương {chapter.Number}: {chapter.Title}</h1>
                        <div class=""body-text"">{chapter.Content}</div>
                    </div>
                    </body>
                    </html>
                    ";
                SelectPdf.PdfDocument newChapter = converter.ConvertHtmlString(htmlChapter);
                doc.Append(newChapter);
            }

            // Save the PDF file
            doc.Save(stream);
            doc.Close();
        }

    }
}
